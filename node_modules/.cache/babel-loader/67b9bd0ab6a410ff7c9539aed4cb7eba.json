{"ast":null,"code":"var _jsxFileName = \"/home/zeus/Documentos/Proyectos/Laboratorio/tp3-calculadora/src/Componentes/Calculadora.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Boton from './Boton';\nimport Listado from './Listado';\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //VARIABLES GLOBALES\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet numero1 = null,\n    numero2 = null,\n    operador = '';\nconst historia = []; //FUNCION PRINCIPAL\n\nconst Calculadora = () => {\n  _s();\n\n  //ESTADO\n  const [resultado, setResultado] = useState('0');\n  const [operacion, setOperacion] = useState(''); //FUNCIONES POR NUMERO\n\n  const Numero1 = props => {\n    setResultado('');\n    setResultado(`${resultado}${props}`);\n\n    if (props === '+' || props === '-' || props === '/' || props === '*') {\n      operador = props;\n      setOperacion(`${numero1} ${operador}`);\n      setResultado('');\n    } else if (numero1 != null) {\n      numero1 = numero1 + props;\n    } else numero1 = props;\n  };\n\n  const Numero2 = props => {\n    setOperacion(`${operacion}${props}`);\n\n    if (props === '=') {\n      setOperacion(`${operacion} ${props}`);\n    } else if (numero2 != null) {\n      numero2 = numero2 + props;\n    } else numero2 = props;\n  }; //FUNCION DE ASIGANCION DE NUMEROS\n\n\n  const actualizarResultado = props => {\n    if (operacion === '') {\n      Numero1(props);\n    } else {\n      Numero2(props);\n\n      if (props === '=') {\n        calcular();\n      }\n    }\n  }; //LIMPIAR DISPLAY\n\n\n  const limpiarDisplay = () => {\n    iniciarHistoria();\n    setResultado('0');\n    setOperacion('');\n    numero1 = null;\n    numero2 = null;\n    operador = '';\n  }; //HISTORIA\n\n\n  const iniciarHistoria = () => {\n    historia.push(operacion);\n  };\n\n  const limpiarHistoria = () => {\n    historia.splice(0, historia.length);\n  }; //CALCULAR EL RESULTADO\n\n\n  const calcular = () => {\n    let r;\n\n    switch (operador) {\n      case '+':\n        r = Number(numero1) + Number(numero2);\n        setOperacion(`${operacion} = ${String(r)}`);\n        break;\n\n      case '-':\n        r = Number(numero1) - Number(numero2);\n        setOperacion(`${operacion} = ${String(r)}`);\n        break;\n\n      case '*':\n        r = Number(numero1) * Number(numero2);\n        setOperacion(`${operacion} = ${String(r)}`);\n        break;\n\n      case '/':\n        r = Number(numero1) / Number(numero2);\n        setOperacion(`${operacion} = ${String(r)}`);\n        break;\n\n      default:\n        setOperacion(`$error`);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visor\",\n        className: \"d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"operacion\",\n          children: operacion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"operacion\",\n          children: resultado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Boton, {\n          actualizar: actualizarResultado,\n          limpiar: limpiarDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"historia\",\n      className: \"col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"d-flex justify-content-center\",\n          children: \"Historial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"historiaListado\",\n        children: /*#__PURE__*/_jsxDEV(Listado, {\n          lista: historia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning btn-sm\",\n        onClick: () => {\n          limpiarHistoria();\n        },\n        children: \"Limpiar Historia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculadora, \"ehZ8ALn6hpngG7kDQtbJBSKnTXI=\");\n\n_c = Calculadora;\nexport default Calculadora;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculadora\");","map":{"version":3,"sources":["/home/zeus/Documentos/Proyectos/Laboratorio/tp3-calculadora/src/Componentes/Calculadora.js"],"names":["React","useState","Boton","Listado","numero1","numero2","operador","historia","Calculadora","resultado","setResultado","operacion","setOperacion","Numero1","props","Numero2","actualizarResultado","calcular","limpiarDisplay","iniciarHistoria","push","limpiarHistoria","splice","length","r","Number","String"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Boton from './Boton';\nimport Listado from './Listado';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//VARIABLES GLOBALES\nlet numero1=null,numero2=null,operador='';\nconst historia = [];\n\n//FUNCION PRINCIPAL\nconst Calculadora = () =>{\n    //ESTADO\n    const [resultado,setResultado] = useState('0');\n    const [operacion,setOperacion] = useState('');\n\n    //FUNCIONES POR NUMERO\n    const Numero1 = (props) =>{\n        setResultado('');\n        setResultado(`${resultado}${props}`);\n        if(props === '+' ||props === '-'||props === '/'||props === '*')\n        {\n            operador = props;\n            setOperacion(`${numero1} ${operador}`);\n            setResultado('');\n        }\n        else if(numero1 != null)\n        {\n            numero1 = numero1+props;\n        }\n        else numero1 = props;\n    }\n    const Numero2 = (props) =>{\n        setOperacion(`${operacion}${props}`);\n        if(props === '=')\n        {\n            setOperacion(`${operacion} ${props}`);\n        }\n        else if(numero2 != null)\n        {\n            numero2 = numero2+props;\n        }\n        else numero2 = props;\n    }\n\n    //FUNCION DE ASIGANCION DE NUMEROS\n    const actualizarResultado =(props)=>{\n        if(operacion === '')\n        {\n            Numero1(props);\n        }\n        else \n        {\n            Numero2(props);\n            if(props ==='=')\n            {\n                calcular();\n            }\n        }\n    }\n\n    //LIMPIAR DISPLAY\n    const limpiarDisplay = ()=>{\n        \n        iniciarHistoria();\n        setResultado('0');\n        setOperacion('');\n        numero1=null;\n        numero2=null;\n        operador='';\n    }\n\n    //HISTORIA\n    const iniciarHistoria =()=>{\n        historia.push(operacion);\n    }\n    const limpiarHistoria = () =>{\n        historia.splice(0,historia.length);\n    }\n\n    //CALCULAR EL RESULTADO\n    const calcular =()=>{\n        let r;\n        switch(operador){\n            case '+':\n                r = Number(numero1) + Number(numero2);\n                setOperacion(`${operacion} = ${String(r)}`);\n                break;\n            case '-':\n                r = Number(numero1) - Number(numero2);\n                setOperacion(`${operacion} = ${String(r)}`);\n                break;\n            case '*':\n                r = Number(numero1) * Number(numero2);\n                setOperacion(`${operacion} = ${String(r)}`);\n                break;\n            case '/':\n                r = Number(numero1) / Number(numero2);\n                setOperacion(`${operacion} = ${String(r)}`);\n                break;\n            default:\n                setOperacion(`$error`);\n                break;\n        }\n    }\n\n    return(\n        <div className='container d-flex justify-content-center'>\n            <div className='col-4'>\n                <div id='visor' className='d-flex justify-content-end'>\n                    <h3 id='operacion'>{operacion}</h3>\n                    <h3 id='operacion'>{resultado}</h3>\n                </div>\n                <div className='d-flex justify-content-center'>\n                    <Boton actualizar={actualizarResultado} limpiar={limpiarDisplay}/>\n                </div>\n            </div>\n            <div id='historia' className='col-2'>\n                <div> \n                    <h4 className='d-flex justify-content-center'>Historial</h4>\n                    <hr/>\n                </div>\n                <div className='historiaListado'> \n                    <Listado lista={historia}/>\n                </div>\n                <button className='btn btn-warning btn-sm' onClick={()=>{limpiarHistoria()}}>Limpiar Historia</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Calculadora;"]},"metadata":{},"sourceType":"module"}